{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dossier\\\\Isitech\\\\Shippee\\\\APP WEB\\\\shippee-web\\\\src\\\\Views\\\\Login\\\\ConnectLoader\\\\ConnectLoader.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import { myAppContextUserInfo } from '../../../Stores/UserInfoContext';\nimport Loading from '../../../Components/Loading/Loading';\nimport useAxios from '../../../Axios/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function ConnectLoader(props) {\n  _s();\n  // const userInfo = useContext(myAppContextUserInfo)\n  // const [isLoaded, setLoaded] = useState(useAxios('https://localhost:7061/api/User/testconnect?id=' + \"sophie.dupont@gmail.com\" + '&psw=' + \"test\", 'get', null))\n  const {\n    cancel,\n    data,\n    error,\n    loaded\n  } = await useAxios('https://localhost:7061/api/User/testconnect?id=' + \"sophie.dupont@gmail.com\" + '&psw=' + \"test\", 'get', null);\n  if (loaded) {\n    console.log('charger !!!');\n  }\n  useEffect(() => {\n    console.log({\n      cancel,\n      data,\n      error,\n      loaded\n    });\n    if (loaded) {\n      console.log('charger !');\n      props.setUserInfo({\n        type: 'CONNECT',\n        payload: data\n      });\n      setTimeout(() => {\n        props.setConnect(true);\n      }, 500);\n    }\n  }, [cancel, data, error, loaded, props]);\n  return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnectLoader, \"6eXzw8eeFoaZsZRQN3XAOg6SAtc=\", false, function () {\n  return [useAxios];\n});\n_c = ConnectLoader;\nexport default ConnectLoader;\nvar _c;\n$RefreshReg$(_c, \"ConnectLoader\");","map":{"version":3,"names":["React","useEffect","useState","Loading","useAxios","ConnectLoader","props","cancel","data","error","loaded","console","log","setUserInfo","type","payload","setTimeout","setConnect"],"sources":["C:/Dossier/Isitech/Shippee/APP WEB/shippee-web/src/Views/Login/ConnectLoader/ConnectLoader.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n// import { myAppContextUserInfo } from '../../../Stores/UserInfoContext';\r\nimport Loading from '../../../Components/Loading/Loading';\r\nimport useAxios from '../../../Axios/axios'\r\n\r\nasync function ConnectLoader(props) {\r\n\r\n  // const userInfo = useContext(myAppContextUserInfo)\r\n  // const [isLoaded, setLoaded] = useState(useAxios('https://localhost:7061/api/User/testconnect?id=' + \"sophie.dupont@gmail.com\" + '&psw=' + \"test\", 'get', null))\r\n  const { cancel, data, error, loaded } = await useAxios('https://localhost:7061/api/User/testconnect?id=' + \"sophie.dupont@gmail.com\" + '&psw=' + \"test\", 'get', null)\r\n\r\n  if(loaded){\r\n    console.log('charger !!!')\r\n  }\r\n  \r\n  useEffect(() => {\r\n    console.log({ cancel, data, error, loaded } )\r\n    if (loaded) {\r\n      console.log('charger !')\r\n      props.setUserInfo({ type: 'CONNECT', payload: data })\r\n      setTimeout(() => { props.setConnect(true) }, 500);\r\n    }\r\n  }, [cancel, data, error, loaded, props])\r\n\r\n  return (\r\n    <Loading />\r\n  )\r\n\r\n}\r\n\r\nexport default ConnectLoader"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA,OAAOC,OAAO,MAAM,qCAAqC;AACzD,OAAOC,QAAQ,MAAM,sBAAsB;AAAA;AAE3C,eAAeC,aAAa,CAACC,KAAK,EAAE;EAAA;EAElC;EACA;EACA,MAAM;IAAEC,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAG,MAAMN,QAAQ,CAAC,iDAAiD,GAAG,yBAAyB,GAAG,OAAO,GAAG,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC;EAErK,IAAGM,MAAM,EAAC;IACRC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B;EAEAX,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAC;MAAEL,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAO,CAAC,CAAE;IAC7C,IAAIA,MAAM,EAAE;MACVC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxBN,KAAK,CAACO,WAAW,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAEP;MAAK,CAAC,CAAC;MACrDQ,UAAU,CAAC,MAAM;QAAEV,KAAK,CAACW,UAAU,CAAC,IAAI,CAAC;MAAC,CAAC,EAAE,GAAG,CAAC;IACnD;EACF,CAAC,EAAE,CAACV,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEJ,KAAK,CAAC,CAAC;EAExC,oBACE,QAAC,OAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAGf;AAAC,GAvBcD,aAAa;EAAA,QAIoBD,QAAQ;AAAA;AAAA,KAJzCC,aAAa;AAyB5B,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}